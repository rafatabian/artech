{"version":3,"file":"static/js/466.063e2f9a.chunk.js","mappings":"oJAGA,MA6DA,EA7DsBA,IAAc,IAAb,MAACC,GAAMD,EAC5B,MAAME,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAeD,EAAAA,EAAAA,QAAO,GAEtBE,GAAkBF,EAAAA,EAAAA,QAAO,MAoC/B,OAlCDG,EAAAA,EAAAA,YAAU,KACT,MAAMC,EAAKL,EAAUM,QACfC,EAAWJ,EAAgBG,QAMjC,IAAIE,EAJAD,IACFA,EAASE,WAAaF,EAASG,YAAcH,EAASI,aAKxD,MAAMC,EAASA,KACb,IAAKP,IAAOE,EAAU,OAEtB,MAAMM,EAAgBR,EAAGK,YAAcL,EAAGM,YAK1CN,EAAGI,YAHW,GAGGP,EAAaI,QAC9BC,EAASE,YAJK,GAISP,EAAaI,SAEhCD,EAAGI,WAAa,GAAKI,GAAiBR,EAAGI,YAAc,KACzDP,EAAaI,UAAY,GAG3BE,EAAmBM,sBAAsBF,EAAO,EAKlD,OAFAJ,EAAmBM,sBAAsBF,GAElC,IAAMG,qBAAqBP,EAAiB,GAClD,KAICQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,2BAA0BC,SAAA,EACrCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAkBG,IAAKpB,EAAUkB,SAC3CnB,EAAMsB,SAASC,KAAI,CAACC,EAAMC,KACvBL,EAAAA,EAAAA,KAAA,OAAiBF,UAAU,sBAAqBC,UAC5CC,EAAAA,EAAAA,KAAA,OAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,SAD1BJ,QAKlBL,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAyBG,IAAKjB,EAAgBe,SACxDnB,EAAM8B,UAAUP,KAAI,CAACC,EAAMC,KACxBL,EAAAA,EAAAA,KAAA,OAAiBF,UAAU,sBAAqBC,UAC5CC,EAAAA,EAAAA,KAAA,OAAKM,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,SAD1BJ,SAKhB,C","sources":["components/MovingSection/MovingSection.jsx"],"sourcesContent":["import \"./MovingSection.css\"\nimport { useEffect, useRef } from \"react\";\n\nconst MovingSection = ({props}) => {\n  const scrollRef = useRef(null);\n  const directionRef = useRef(1);\n  //seconde moving section\n  const secondScrollRef = useRef(null);\n\n useEffect(() => {\n  const el = scrollRef.current;\n  const secondEl = secondScrollRef.current;\n\n  if (secondEl) {\n    secondEl.scrollLeft = secondEl.scrollWidth - secondEl.clientWidth;\n  }\n\n  let animationFrameId;\n\n  const scroll = () => {\n    if (!el || !secondEl) return;\n\n    const maxScrollLeft = el.scrollWidth - el.clientWidth;\n\n    const speed = 0.5;\n\n    // Scroll both\n    el.scrollLeft += directionRef.current * speed;\n    secondEl.scrollLeft -= directionRef.current * speed;\n\n    if (el.scrollLeft + 1 >= maxScrollLeft || el.scrollLeft <= 0) {\n      directionRef.current *= -1;\n    }\n\n    animationFrameId = requestAnimationFrame(scroll);\n  };\n\n  animationFrameId = requestAnimationFrame(scroll);\n\n  return () => cancelAnimationFrame(animationFrameId);\n}, []);\n\n\n  return (\n    <div className=\"moving_section_container\"> \n        <h1>Tech we use:</h1>\n        <div className=\"moving_section\"  ref={scrollRef}>\n            {props.firstSet.map((item, index) => (\n                <div key={index} className=\"moving_section_item\">\n                    <img src={item.image} alt={item.title} />\n                </div> \n            ))} \n        </div>\n        <div className=\"second_moving_section\"  ref={secondScrollRef}>\n            {props.secondSet.map((item, index) => (\n                <div key={index} className=\"moving_section_item\">\n                    <img src={item.image} alt={item.title} />\n                </div> \n            ))} \n        </div>\n    </div>\n  )\n}\n\nexport default MovingSection"],"names":["_ref","props","scrollRef","useRef","directionRef","secondScrollRef","useEffect","el","current","secondEl","animationFrameId","scrollLeft","scrollWidth","clientWidth","scroll","maxScrollLeft","requestAnimationFrame","cancelAnimationFrame","_jsxs","className","children","_jsx","ref","firstSet","map","item","index","src","image","alt","title","secondSet"],"sourceRoot":""}