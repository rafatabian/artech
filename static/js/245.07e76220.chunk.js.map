{"version":3,"file":"static/js/245.07e76220.chunk.js","mappings":"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","sources":["../node_modules/countup.js/dist/countUp.umd.js","../node_modules/react-countup/build/index.js","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?i(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],i):i((t=\"undefined\"!=typeof globalThis?globalThis:t||self).countUp={})}(this,(function(t){\"use strict\";var i=function(){return i=Object.assign||function(t){for(var i,n=1,s=arguments.length;n<s;n++)for(var a in i=arguments[n])Object.prototype.hasOwnProperty.call(i,a)&&(t[a]=i[a]);return t},i.apply(this,arguments)},n=function(){function t(t,n,s){var a=this;this.endVal=n,this.options=s,this.version=\"2.8.1\",this.defaults={startVal:0,decimalPlaces:0,duration:2,useEasing:!0,useGrouping:!0,useIndianSeparators:!1,smartEasingThreshold:999,smartEasingAmount:333,separator:\",\",decimal:\".\",prefix:\"\",suffix:\"\",enableScrollSpy:!1,scrollSpyDelay:200,scrollSpyOnce:!1},this.finalEndVal=null,this.useEasing=!0,this.countDown=!1,this.error=\"\",this.startVal=0,this.paused=!0,this.once=!1,this.count=function(t){a.startTime||(a.startTime=t);var i=t-a.startTime;a.remaining=a.duration-i,a.useEasing?a.countDown?a.frameVal=a.startVal-a.easingFn(i,0,a.startVal-a.endVal,a.duration):a.frameVal=a.easingFn(i,a.startVal,a.endVal-a.startVal,a.duration):a.frameVal=a.startVal+(a.endVal-a.startVal)*(i/a.duration);var n=a.countDown?a.frameVal<a.endVal:a.frameVal>a.endVal;a.frameVal=n?a.endVal:a.frameVal,a.frameVal=Number(a.frameVal.toFixed(a.options.decimalPlaces)),a.printValue(a.frameVal),i<a.duration?a.rAF=requestAnimationFrame(a.count):null!==a.finalEndVal?a.update(a.finalEndVal):a.options.onCompleteCallback&&a.options.onCompleteCallback()},this.formatNumber=function(t){var i,n,s,e,o=t<0?\"-\":\"\";i=Math.abs(t).toFixed(a.options.decimalPlaces);var r=(i+=\"\").split(\".\");if(n=r[0],s=r.length>1?a.options.decimal+r[1]:\"\",a.options.useGrouping){e=\"\";for(var l=3,h=0,u=0,p=n.length;u<p;++u)a.options.useIndianSeparators&&4===u&&(l=2,h=1),0!==u&&h%l==0&&(e=a.options.separator+e),h++,e=n[p-u-1]+e;n=e}return a.options.numerals&&a.options.numerals.length&&(n=n.replace(/[0-9]/g,(function(t){return a.options.numerals[+t]})),s=s.replace(/[0-9]/g,(function(t){return a.options.numerals[+t]}))),o+a.options.prefix+n+s+a.options.suffix},this.easeOutExpo=function(t,i,n,s){return n*(1-Math.pow(2,-10*t/s))*1024/1023+i},this.options=i(i({},this.defaults),s),this.formattingFn=this.options.formattingFn?this.options.formattingFn:this.formatNumber,this.easingFn=this.options.easingFn?this.options.easingFn:this.easeOutExpo,this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.endVal=this.validateValue(n),this.options.decimalPlaces=Math.max(this.options.decimalPlaces),this.resetDuration(),this.options.separator=String(this.options.separator),this.useEasing=this.options.useEasing,\"\"===this.options.separator&&(this.options.useGrouping=!1),this.el=\"string\"==typeof t?document.getElementById(t):t,this.el?this.printValue(this.startVal):this.error=\"[CountUp] target is null or undefined\",\"undefined\"!=typeof window&&this.options.enableScrollSpy&&(this.error?console.error(this.error,t):(window.onScrollFns=window.onScrollFns||[],window.onScrollFns.push((function(){return a.handleScroll(a)})),window.onscroll=function(){window.onScrollFns.forEach((function(t){return t()}))},this.handleScroll(this)))}return t.prototype.handleScroll=function(t){if(t&&window&&!t.once){var i=window.innerHeight+window.scrollY,n=t.el.getBoundingClientRect(),s=n.top+window.pageYOffset,a=n.top+n.height+window.pageYOffset;a<i&&a>window.scrollY&&t.paused?(t.paused=!1,setTimeout((function(){return t.start()}),t.options.scrollSpyDelay),t.options.scrollSpyOnce&&(t.once=!0)):(window.scrollY>a||s>i)&&!t.paused&&t.reset()}},t.prototype.determineDirectionAndSmartEasing=function(){var t=this.finalEndVal?this.finalEndVal:this.endVal;this.countDown=this.startVal>t;var i=t-this.startVal;if(Math.abs(i)>this.options.smartEasingThreshold&&this.options.useEasing){this.finalEndVal=t;var n=this.countDown?1:-1;this.endVal=t+n*this.options.smartEasingAmount,this.duration=this.duration/2}else this.endVal=t,this.finalEndVal=null;null!==this.finalEndVal?this.useEasing=!1:this.useEasing=this.options.useEasing},t.prototype.start=function(t){this.error||(this.options.onStartCallback&&this.options.onStartCallback(),t&&(this.options.onCompleteCallback=t),this.duration>0?(this.determineDirectionAndSmartEasing(),this.paused=!1,this.rAF=requestAnimationFrame(this.count)):this.printValue(this.endVal))},t.prototype.pauseResume=function(){this.paused?(this.startTime=null,this.duration=this.remaining,this.startVal=this.frameVal,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count)):cancelAnimationFrame(this.rAF),this.paused=!this.paused},t.prototype.reset=function(){cancelAnimationFrame(this.rAF),this.paused=!0,this.resetDuration(),this.startVal=this.validateValue(this.options.startVal),this.frameVal=this.startVal,this.printValue(this.startVal)},t.prototype.update=function(t){cancelAnimationFrame(this.rAF),this.startTime=null,this.endVal=this.validateValue(t),this.endVal!==this.frameVal&&(this.startVal=this.frameVal,null==this.finalEndVal&&this.resetDuration(),this.finalEndVal=null,this.determineDirectionAndSmartEasing(),this.rAF=requestAnimationFrame(this.count))},t.prototype.printValue=function(t){var i;if(this.el){var n=this.formattingFn(t);if(null===(i=this.options.plugin)||void 0===i?void 0:i.render)this.options.plugin.render(this.el,n);else if(\"INPUT\"===this.el.tagName)this.el.value=n;else\"text\"===this.el.tagName||\"tspan\"===this.el.tagName?this.el.textContent=n:this.el.innerHTML=n}},t.prototype.ensureNumber=function(t){return\"number\"==typeof t&&!isNaN(t)},t.prototype.validateValue=function(t){var i=Number(t);return this.ensureNumber(i)?i:(this.error=\"[CountUp] invalid start or end value: \".concat(t),null)},t.prototype.resetDuration=function(){this.startTime=null,this.duration=1e3*Number(this.options.duration),this.remaining=this.duration},t}();t.CountUp=n}));\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\nvar countup_js = require('countup.js');\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n/**\n * Silence SSR Warnings.\n * Borrowed from Formik v2.1.1, Licensed MIT.\n *\n * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE\n */\nvar useIsomorphicLayoutEffect = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/**\n * Create a stable reference to a callback which is updated after each render is committed.\n * Typed version borrowed from Formik v2.2.1. Licensed MIT.\n *\n * https://github.com/formium/formik/blob/9316a864478f8fcd4fa99a0735b1d37afdf507dc/LICENSE\n */\nfunction useEventCallback(fn) {\n  var ref = React.useRef(fn);\n\n  // we copy a ref to the callback scoped to the current state/props on each render\n  useIsomorphicLayoutEffect(function () {\n    ref.current = fn;\n  });\n  return React.useCallback(function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return ref.current.apply(void 0, args);\n  }, []);\n}\n\nvar createCountUpInstance = function createCountUpInstance(el, props) {\n  var decimal = props.decimal,\n    decimals = props.decimals,\n    duration = props.duration,\n    easingFn = props.easingFn,\n    end = props.end,\n    formattingFn = props.formattingFn,\n    numerals = props.numerals,\n    prefix = props.prefix,\n    separator = props.separator,\n    start = props.start,\n    suffix = props.suffix,\n    useEasing = props.useEasing,\n    useGrouping = props.useGrouping,\n    useIndianSeparators = props.useIndianSeparators,\n    enableScrollSpy = props.enableScrollSpy,\n    scrollSpyDelay = props.scrollSpyDelay,\n    scrollSpyOnce = props.scrollSpyOnce,\n    plugin = props.plugin;\n  return new countup_js.CountUp(el, end, {\n    startVal: start,\n    duration: duration,\n    decimal: decimal,\n    decimalPlaces: decimals,\n    easingFn: easingFn,\n    formattingFn: formattingFn,\n    numerals: numerals,\n    separator: separator,\n    prefix: prefix,\n    suffix: suffix,\n    plugin: plugin,\n    useEasing: useEasing,\n    useIndianSeparators: useIndianSeparators,\n    useGrouping: useGrouping,\n    enableScrollSpy: enableScrollSpy,\n    scrollSpyDelay: scrollSpyDelay,\n    scrollSpyOnce: scrollSpyOnce\n  });\n};\n\nvar _excluded$1 = [\"ref\", \"startOnMount\", \"enableReinitialize\", \"delay\", \"onEnd\", \"onStart\", \"onPauseResume\", \"onReset\", \"onUpdate\"];\nvar DEFAULTS = {\n  decimal: '.',\n  separator: ',',\n  delay: null,\n  prefix: '',\n  suffix: '',\n  duration: 2,\n  start: 0,\n  decimals: 0,\n  startOnMount: true,\n  enableReinitialize: true,\n  useEasing: true,\n  useGrouping: true,\n  useIndianSeparators: false\n};\nvar useCountUp = function useCountUp(props) {\n  var filteredProps = Object.fromEntries(Object.entries(props).filter(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      value = _ref2[1];\n    return value !== undefined;\n  }));\n  var _useMemo = React.useMemo(function () {\n      return _objectSpread2(_objectSpread2({}, DEFAULTS), filteredProps);\n    }, [props]),\n    ref = _useMemo.ref,\n    startOnMount = _useMemo.startOnMount,\n    enableReinitialize = _useMemo.enableReinitialize,\n    delay = _useMemo.delay,\n    onEnd = _useMemo.onEnd,\n    onStart = _useMemo.onStart,\n    onPauseResume = _useMemo.onPauseResume,\n    onReset = _useMemo.onReset,\n    onUpdate = _useMemo.onUpdate,\n    instanceProps = _objectWithoutProperties(_useMemo, _excluded$1);\n  var countUpRef = React.useRef();\n  var timerRef = React.useRef();\n  var isInitializedRef = React.useRef(false);\n  var createInstance = useEventCallback(function () {\n    return createCountUpInstance(typeof ref === 'string' ? ref : ref.current, instanceProps);\n  });\n  var getCountUp = useEventCallback(function (recreate) {\n    var countUp = countUpRef.current;\n    if (countUp && !recreate) {\n      return countUp;\n    }\n    var newCountUp = createInstance();\n    countUpRef.current = newCountUp;\n    return newCountUp;\n  });\n  var start = useEventCallback(function () {\n    var run = function run() {\n      return getCountUp(true).start(function () {\n        onEnd === null || onEnd === void 0 || onEnd({\n          pauseResume: pauseResume,\n          reset: reset,\n          start: restart,\n          update: update\n        });\n      });\n    };\n    if (delay && delay > 0) {\n      timerRef.current = setTimeout(run, delay * 1000);\n    } else {\n      run();\n    }\n    onStart === null || onStart === void 0 || onStart({\n      pauseResume: pauseResume,\n      reset: reset,\n      update: update\n    });\n  });\n  var pauseResume = useEventCallback(function () {\n    getCountUp().pauseResume();\n    onPauseResume === null || onPauseResume === void 0 || onPauseResume({\n      reset: reset,\n      start: restart,\n      update: update\n    });\n  });\n  var reset = useEventCallback(function () {\n    // Quick fix for https://github.com/glennreyes/react-countup/issues/736 - should be investigated\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    if (getCountUp().el) {\n      timerRef.current && clearTimeout(timerRef.current);\n      getCountUp().reset();\n      onReset === null || onReset === void 0 || onReset({\n        pauseResume: pauseResume,\n        start: restart,\n        update: update\n      });\n    }\n  });\n  var update = useEventCallback(function (newEnd) {\n    getCountUp().update(newEnd);\n    onUpdate === null || onUpdate === void 0 || onUpdate({\n      pauseResume: pauseResume,\n      reset: reset,\n      start: restart\n    });\n  });\n  var restart = useEventCallback(function () {\n    reset();\n    start();\n  });\n  var maybeInitialize = useEventCallback(function (shouldReset) {\n    if (startOnMount) {\n      if (shouldReset) {\n        reset();\n      }\n      start();\n    }\n  });\n  React.useEffect(function () {\n    if (!isInitializedRef.current) {\n      isInitializedRef.current = true;\n      maybeInitialize();\n    } else if (enableReinitialize) {\n      maybeInitialize(true);\n    }\n  }, [enableReinitialize, isInitializedRef, maybeInitialize, delay, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.formattingFn]);\n  React.useEffect(function () {\n    return function () {\n      reset();\n    };\n  }, [reset]);\n  return {\n    start: restart,\n    pauseResume: pauseResume,\n    reset: reset,\n    update: update,\n    getCountUp: getCountUp\n  };\n};\n\nvar _excluded = [\"className\", \"redraw\", \"containerProps\", \"children\", \"style\"];\nvar CountUp = function CountUp(props) {\n  var className = props.className,\n    redraw = props.redraw,\n    containerProps = props.containerProps,\n    children = props.children,\n    style = props.style,\n    useCountUpProps = _objectWithoutProperties(props, _excluded);\n  var containerRef = React.useRef(null);\n  var isInitializedRef = React.useRef(false);\n  var _useCountUp = useCountUp(_objectSpread2(_objectSpread2({}, useCountUpProps), {}, {\n      ref: containerRef,\n      startOnMount: typeof children !== 'function' || props.delay === 0,\n      // component manually restarts\n      enableReinitialize: false\n    })),\n    start = _useCountUp.start,\n    reset = _useCountUp.reset,\n    updateCountUp = _useCountUp.update,\n    pauseResume = _useCountUp.pauseResume,\n    getCountUp = _useCountUp.getCountUp;\n  var restart = useEventCallback(function () {\n    start();\n  });\n  var update = useEventCallback(function (end) {\n    if (!props.preserveValue) {\n      reset();\n    }\n    updateCountUp(end);\n  });\n  var initializeOnMount = useEventCallback(function () {\n    if (typeof props.children === 'function') {\n      // Warn when user didn't use containerRef at all\n      if (!(containerRef.current instanceof Element)) {\n        console.error(\"Couldn't find attached element to hook the CountUp instance into! Try to attach \\\"containerRef\\\" from the render prop to a an Element, eg. <span ref={containerRef} />.\");\n        return;\n      }\n    }\n\n    // unlike the hook, the CountUp component initializes on mount\n    getCountUp();\n  });\n  React.useEffect(function () {\n    initializeOnMount();\n  }, [initializeOnMount]);\n  React.useEffect(function () {\n    if (isInitializedRef.current) {\n      update(props.end);\n    }\n  }, [props.end, update]);\n  var redrawDependencies = redraw && props;\n\n  // if props.redraw, call this effect on every props change\n  React.useEffect(function () {\n    if (redraw && isInitializedRef.current) {\n      restart();\n    }\n  }, [restart, redraw, redrawDependencies]);\n\n  // if not props.redraw, call this effect only when certain props are changed\n  React.useEffect(function () {\n    if (!redraw && isInitializedRef.current) {\n      restart();\n    }\n  }, [restart, redraw, props.start, props.suffix, props.prefix, props.duration, props.separator, props.decimals, props.decimal, props.className, props.formattingFn]);\n  React.useEffect(function () {\n    isInitializedRef.current = true;\n  }, []);\n  if (typeof children === 'function') {\n    // TypeScript forces functional components to return JSX.Element | null.\n    return children({\n      countUpRef: containerRef,\n      start: start,\n      reset: reset,\n      update: updateCountUp,\n      pauseResume: pauseResume,\n      getCountUp: getCountUp\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: className,\n    ref: containerRef,\n    style: style\n  }, containerProps), typeof props.start !== 'undefined' ? getCountUp().formattingFn(props.start) : '');\n};\n\nexports.default = CountUp;\nexports.useCountUp = useCountUp;\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["t","i","Object","assign","n","s","arguments","length","a","prototype","hasOwnProperty","call","apply","this","endVal","options","version","defaults","startVal","decimalPlaces","duration","useEasing","useGrouping","useIndianSeparators","smartEasingThreshold","smartEasingAmount","separator","decimal","prefix","suffix","enableScrollSpy","scrollSpyDelay","scrollSpyOnce","finalEndVal","countDown","error","paused","once","count","startTime","remaining","frameVal","easingFn","Number","toFixed","printValue","rAF","requestAnimationFrame","update","onCompleteCallback","formatNumber","e","o","Math","abs","r","split","l","h","u","p","numerals","replace","easeOutExpo","pow","formattingFn","validateValue","max","resetDuration","String","el","document","getElementById","window","console","onScrollFns","push","handleScroll","onscroll","forEach","innerHeight","scrollY","getBoundingClientRect","top","pageYOffset","height","setTimeout","start","reset","determineDirectionAndSmartEasing","onStartCallback","pauseResume","cancelAnimationFrame","plugin","render","tagName","value","textContent","innerHTML","ensureNumber","isNaN","concat","CountUp","exports","React","require","countup_js","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","_objectSpread2","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","Symbol","toPrimitive","TypeError","_toPrimitive","obj","key","configurable","writable","_extends","bind","target","source","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_slicedToArray","arr","Array","isArray","_arrayWithHoles","iterator","f","next","done","return","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","slice","constructor","name","from","test","_unsupportedIterableToArray","_nonIterableRest","len","arr2","useIsomorphicLayoutEffect","createElement","useLayoutEffect","useEffect","useEventCallback","fn","ref","useRef","current","useCallback","_len","args","_key","_excluded$1","DEFAULTS","delay","decimals","startOnMount","enableReinitialize","useCountUp","props","filteredProps","fromEntries","entries","_ref","undefined","_useMemo","useMemo","onEnd","onStart","onPauseResume","onReset","onUpdate","instanceProps","countUpRef","timerRef","isInitializedRef","createInstance","end","createCountUpInstance","getCountUp","recreate","countUp","newCountUp","run","restart","clearTimeout","newEnd","maybeInitialize","shouldReset","_excluded","className","redraw","containerProps","children","style","useCountUpProps","containerRef","_useCountUp","updateCountUp","preserveValue","initializeOnMount","Element","redrawDependencies","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","has","set","isAnimationControls","v","getValueState","visualElement","state","values","getVelocity","resolveVariantFromProps","definition","custom","velocity","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","frameloop","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","preRender","postRender","processBatch","useManualTiming","performance","now","min","keepAlive","immediate","frame","cancelFrame","frameSteps","transformPropOrder","transformProps","positionalKeys","addUniqueItem","item","removeItem","index","splice","SubscriptionManager","subscriptions","handler","notify","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","transformers","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","warning","invariant","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","hueToRgb","q","mixImmediate","mixNumber","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","_ref3","_ref4","paddingTop","paddingBottom","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","setProperty","setStyle","commitStyles","effect","getComputedTiming","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","isObject","isHTMLElement","acceleratedValues","supportsWaapi","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createDelta","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onMove","handlePointerMove","handlePointerUp","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement"],"sourceRoot":""}