{"version":3,"file":"static/js/323.4b1e6ef1.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","length","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","warning","invariant","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","_ref","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","map","hueToRgb","p","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","driver","newSpeed","hasChanged","onPlay","complete","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref10","_ref11","_ref12","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","isObject","isHTMLElement","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createDelta","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","scaleZ","perspective","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","createDomVisualElement"],"sourceRoot":""}