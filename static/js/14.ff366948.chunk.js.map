{"version":3,"file":"static/js/14.ff366948.chunk.js","mappings":"uKA0KA,MA0HA,EA1HgBA,KACd,MAAMC,GAAMC,EAAAA,EAAAA,WACLC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAErCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,gBACRP,GAAU,EACZ,GAEF,CAAEQ,UAAW,KAKf,OAFIX,EAAIY,SAASN,EAASO,QAAQb,EAAIY,SAE/B,KACDZ,EAAIY,SAASN,EAASQ,UAAUd,EAAIY,QAAQ,CACjD,GACA,IAEL,MAAMG,EAAcC,IAAqB,IAApB,WAAEC,GAAYD,EACjC,MAEME,EAAgB,EAAIC,KAAKC,GAFhB,GAITpB,GAAMC,EAAAA,EAAAA,WACLC,EAAQC,IAAaC,EAAAA,EAAAA,WAAS,IAErCC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBc,IAAA,IAAEZ,GAAMY,EAAA,OAAKlB,EAAUM,EAAMC,eAAe,GAC5C,CAAEC,UAAW,KAGf,OADIX,EAAIY,SAASN,EAASO,QAAQb,EAAIY,SAC/B,IAAMN,EAASgB,YAAY,GACjC,IAEH,MAAMC,EAAYN,EAAa,IAAOC,EAEtC,OACEM,EAAAA,EAAAA,KAAA,OAAKxB,IAAKA,EAAKyB,UAAU,YAAWC,UAClCC,EAAAA,EAAAA,MAAA,OAAKC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,cAAaJ,SAAA,EACnDF,EAAAA,EAAAA,KAAA,UACEO,GAAG,KACHC,GAAG,KACHC,EAxBO,GAyBPC,KAAK,OACLC,OAAO,UACPC,YA1BO,KA4BTZ,EAAAA,EAAAA,KAACa,EAAAA,EAAOC,OAAM,CACZP,GAAG,KACHC,GAAG,KACHC,EAhCO,GAiCPC,KAAK,OACLC,OAAO,UACPC,YAlCO,EAmCPG,gBAAiBrB,EACjBsB,iBAAkBtB,EAClBuB,QAAS,CACPD,iBAAkBtC,EAASgB,EAAgBK,EAAWL,GAExDwB,WAAY,CAAEC,SAAU,IAAKC,KAAM,WACnCC,cAAc,WAEhBrB,EAAAA,EAAAA,KAAA,QACEsB,EAAE,KACFC,EAAE,KACFC,WAAW,SACXvB,UAAU,kCAAiCC,SAE1CxB,EAAS,GAAGe,KAAgB,WAG7B,EAIR,OACEU,EAAAA,EAAAA,MAAA,WAAS3B,IAAKA,EAAKyB,UAAU,4CAA2CC,SAAA,EACtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gBAAeC,SAAC,eAC7BxB,IACCyB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CAACC,IAAK,IAAMP,SAAU,OAEhCnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cAERC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,WAAUC,UACrBF,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CAACC,IAAK,KAAMP,SAAU,OAEhCnB,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAMZF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDC,SACrExB,IACCsB,EAAAA,EAAAA,KAACa,EAAAA,EAAOc,IAAG,CACT1B,UAAU,qBACV2B,QAAS,CAAExB,MAAO,GAClBa,QAAS,CAAEb,MAAO,OAClBc,WAAY,CAAEC,SAAU,WAMhChB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mCAAkCC,SAAA,EACnDF,EAAAA,EAAAA,KAACT,EAAW,CAACE,WAAY,MACzBO,EAAAA,EAAAA,KAACT,EAAW,CAACE,WAAY,MACzBO,EAAAA,EAAAA,KAACT,EAAW,CAACE,WAAY,UAEf,C","sources":["components/Pachete/Pachete.jsx"],"sourcesContent":["// import \"./Pachete.css\"\n// import { useEffect, useRef } from \"react\"\n// import { Link} from \"react-router-dom\"\n// import { Helmet } from \"react-helmet-async\"\n// import { useTranslation } from \"react-i18next\"\n\n\n// const Pachete = () => {\n//   const plansRef = useRef()\n//   const [t] = useTranslation(\"global\")\n\n//   // scroll to top and to plans details when redirected from another page\n// useEffect(() => {\n//   const hash = window.location.hash\n//   const hashParts = hash.split(\"/\")\n//   const planSelected = hashParts[hashParts.length - 1]\n//   if(planSelected !== \"plans\"){\n//     plansRef.current.scrollIntoView()\n//   }else{\n//   window.scrollTo(0, 0)\n//   }\n// }, [])\n\n\n\n\n//   return (\n//     <>\n//      <Helmet>\n//       <title>Pachete</title>\n//       <meta name=\"description\" content=\"Alege pachetul potrivit pentru nevoile tale, fie ca vrei ceva simplu sau ceva mai complex.\"/>\n//       <link rel=\"canonical\" href=\"https://artech-agency.co/#/plans\"/>\n//     </Helmet>\n    \n//     <div className=\"plans_container\">\n//       <h1>{t(\"navbar_pachete\")}</h1>\n//         {/* constent under plans */}  \n//         <div className=\"plans_content\" ref={plansRef}>\n//          <div className=\"plans_content_normal\">\n//           <h1>STARTER</h1>\n//           <p>{t(\"pachete_page_starter_sub\")}</p>\n//           <div><span>{t(\"pachete_page_starter_title1\")}</span> <p>{t(\"pachete_page_starter_p1\")}</p></div>\n//           <div><span>{t(\"pachete_page_starter_title2\")}</span> <p>{t(\"pachete_page_starter_p2\")}</p></div>\n//           <div><span>{t(\"pachete_page_starter_title3\")}</span> <p>{t(\"pachete_page_starter_p3\")}</p></div>\n//           <div className=\"plans_button_container\">\n//             <Link to=\"/contact\"> {t(\"pachete_page_button\")} STARTER </Link>\n//           </div>\n//          </div> \n\n//          <div className=\"plans_content_normal\" >\n//           <h1>STANDARD</h1>\n//           <p>{t(\"pachete_page_standard_sub\")}</p>\n//           <div><span>{t(\"pachete_page_standard_title1\")}</span><p>{t(\"pachete_page_standard_p1\")}</p></div>\n//           <div><span>{t(\"pachete_page_standard_title2\")}</span><p>{t(\"pachete_page_standard_p2\")}</p></div>\n//           <div><span>{t(\"pachete_page_standard_title3\")}</span><p>{t(\"pachete_page_standard_p3\")}</p></div>\n//           <div><span>{t(\"pachete_page_standard_title4\")}</span><p>{t(\"pachete_page_standard_p4\")}</p></div>\n//           <div><span>{t(\"pachete_page_standard_title5\")}</span><p>{t(\"pachete_page_standard_p5\")}</p></div>\n//           <div className=\"plans_button_container\">\n//             <Link to=\"/contact\"> {t(\"pachete_page_button\")} STANDARD</Link>\n//             </div>\n//          </div>\n\n//          <div className=\"plans_content_normal\">\n//           <h1>PRO</h1>\n//           <p>{t(\"pachete_page_pro_sub\")}</p>\n//           <div><span>{t(\"pachete_page_pro_title1\")}</span><p>{t(\"pachete_page_pro_p1\")}</p></div>\n//           <div><span>{t(\"pachete_page_pro_title2\")}</span><p>{t(\"pachete_page_pro_p2\")}</p></div>\n//           <div><span>{t(\"pachete_page_pro_title3\")}</span><p>{t(\"pachete_page_pro_p3\")}</p></div>\n//           <div><span>{t(\"pachete_page_pro_title4\")}</span><p>{t(\"pachete_page_pro_p4\")}</p></div>\n//           <div><span>{t(\"pachete_page_pro_title5\")}</span><p>{t(\"pachete_page_pro_p5\")}</p></div>\n//           <div className=\"plans_button_container\">\n//             <Link to=\"/contact\"> {t(\"pachete_page_button\")} PRO</Link>\n//           </div>\n//          </div>\n\n//         </div>\n\n//         <div className=\"plans_final_text\">\n//           <span>{t(\"pachete_final_text\")}</span>\n    \n//          <div className=\"plans_button_last_container\">\n//             <Link to=\"/contact\">{t(\"branding_contact\")}</Link>  \n//           </div>\n            \n//        </div>\n\n//     </div>\n//     </>\n//   )\n// }\n\n// export default Pachete\n\n\n\n// import { motion } from \"framer-motion\";\n// import { useEffect, useRef, useState } from \"react\";\n\n// // ✅ RadialChart component\n// const RadialChart = ({ percentage }) => {\n//   const radius = 50;\n//   const stroke = 8;\n//   const circumference = 2 * Math.PI * radius;\n\n//   const ref = useRef();\n//   const [inView, setInView] = useState(false);\n\n//   useEffect(() => {\n//     const observer = new IntersectionObserver(\n//       ([entry]) => setInView(entry.isIntersecting),\n//       { threshold: 0.5 }\n//     );\n//     if (ref.current) observer.observe(ref.current);\n//     return () => observer.disconnect();\n//   }, []);\n\n//   const progress = (percentage / 100) * circumference;\n\n//   return (\n//     <div ref={ref} className=\"w-32 h-32\">\n//       <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 120 120\">\n//         <circle\n//           cx=\"60\"\n//           cy=\"60\"\n//           r={radius}\n//           fill=\"none\"\n//           stroke=\"#e5e7eb\"\n//           strokeWidth={stroke}\n//         />\n//         <motion.circle\n//           cx=\"60\"\n//           cy=\"60\"\n//           r={radius}\n//           fill=\"none\"\n//           stroke=\"#3b82f6\"\n//           strokeWidth={stroke}\n//           strokeDasharray={circumference}\n//           strokeDashoffset={circumference}\n//           animate={{\n//             strokeDashoffset: inView ? circumference - progress : circumference,\n//           }}\n//           transition={{ duration: 1.5, ease: \"easeOut\" }}\n//           strokeLinecap=\"round\"\n//         />\n//         <text\n//           x=\"60\"\n//           y=\"65\"\n//           textAnchor=\"middle\"\n//           className=\"text-xl font-bold fill-blue-600\"\n//         >\n//           {inView ? `${percentage}%` : \"0%\"}\n//         </text>\n//       </svg>\n//     </div>\n//   );\n// };\n\n// export const Pachete = () => (\n//   <div className=\"flex justify-center gap-10 mt-20\">\n//     <RadialChart percentage={75} />\n//     <RadialChart percentage={90} />\n//     <RadialChart percentage={60} />\n//   </div>\n// );\n// export default Pachete;\n\nimport React, { useRef, useState, useEffect } from \"react\";\nimport CountUp from \"react-countup\";\nimport { motion } from \"framer-motion\";\n\nconst Pachete = () => {\n  const ref = useRef();\n  const [inView, setInView] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setInView(true);\n        }\n      },\n      { threshold: 0.5 } // Trigger when 50% of the section is visible\n    );\n\n    if (ref.current) observer.observe(ref.current);\n\n    return () => {\n      if (ref.current) observer.unobserve(ref.current);\n    };\n  }, []);\n  // ✅ RadialChart component\nconst RadialChart = ({ percentage }) => {\n  const radius = 50;\n  const stroke = 8;\n  const circumference = 2 * Math.PI * radius;\n\n  const ref = useRef();\n  const [inView, setInView] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => setInView(entry.isIntersecting),\n      { threshold: 0.5 }\n    );\n    if (ref.current) observer.observe(ref.current);\n    return () => observer.disconnect();\n  }, []);\n\n  const progress = (percentage / 100) * circumference;\n\n  return (\n    <div ref={ref} className=\"w-32 h-32\">\n      <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 120 120\">\n        <circle\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          fill=\"none\"\n          stroke=\"#e5e7eb\"\n          strokeWidth={stroke}\n        />\n        <motion.circle\n          cx=\"60\"\n          cy=\"60\"\n          r={radius}\n          fill=\"none\"\n          stroke=\"#3b82f6\"\n          strokeWidth={stroke}\n          strokeDasharray={circumference}\n          strokeDashoffset={circumference}\n          animate={{\n            strokeDashoffset: inView ? circumference - progress : circumference,\n          }}\n          transition={{ duration: 1.5, ease: \"easeOut\" }}\n          strokeLinecap=\"round\"\n        />\n        <text\n          x=\"60\"\n          y=\"65\"\n          textAnchor=\"middle\"\n          className=\"text-xl font-bold fill-blue-600\"\n        >\n          {inView ? `${percentage}%` : \"0%\"}\n        </text>\n      </svg>\n    </div>\n  );\n};\n\n  return (\n    <section ref={ref} className=\"h-screen flex items-center justify-center\">\n      <div className=\"text-center\">\n        <h2 className=\"text-3xl mb-4\">Our Growth</h2>\n        {inView && (\n          <div className=\"flex justify-center gap-10\">\n            <div>\n              <p className=\"text-2xl\">\n                <CountUp end={5000} duration={2} />\n              </p>\n              <span>Users</span>\n            </div>\n            <div>\n              <p className=\"text-2xl\">\n                <CountUp end={1200} duration={2} />\n              </p>\n              <span>Downloads</span>\n            </div>\n          </div>\n        )}\n\n        {/* Graph Example */}\n        <div className=\"mt-10 w-64 h-4 bg-gray-200 rounded-full overflow-hidden\">\n          {inView && (\n            <motion.div\n              className=\"h-full bg-blue-500\"\n              initial={{ width: 0 }}\n              animate={{ width: \"80%\" }}\n              transition={{ duration: 2 }}\n            />\n          )}\n\n        </div>\n      </div>\n      <div className=\"flex justify-center gap-10 mt-20\">\n    <RadialChart percentage={75} />\n    <RadialChart percentage={90} />     \n    <RadialChart percentage={60} />\n  </div>\n    </section>\n  );\n};\n\nexport default Pachete\n"],"names":["Pachete","ref","useRef","inView","setInView","useState","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","threshold","current","observe","unobserve","RadialChart","_ref2","percentage","circumference","Math","PI","_ref3","disconnect","progress","_jsx","className","children","_jsxs","width","height","viewBox","cx","cy","r","fill","stroke","strokeWidth","motion","circle","strokeDasharray","strokeDashoffset","animate","transition","duration","ease","strokeLinecap","x","y","textAnchor","CountUp","end","div","initial"],"sourceRoot":""}